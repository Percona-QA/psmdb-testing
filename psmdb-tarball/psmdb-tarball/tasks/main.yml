---
- set_fact:
    tarball: "{{ lookup('env', 'TARBALL') | default('https://downloads.percona.com/downloads/percona-server-mongodb-5.0/percona-server-mongodb-5.0.13-11/binary/tarball/percona-server-mongodb-5.0.13-11-x86_64.glibc2.17-minimal.tar.gz', true) }}"

- name: Get mongodb version
  set_fact:
    mongodb_ver: "{{ tarball | regex_search('mongodb-([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') }}"

- name: Get git repo branch
  set_fact:
    repo_branch: "{{ tarball | regex_search('mongodb-([0-9]+\\.[0-9]+)', '\\1') }}"

- name: Copy tarball
  copy:
    src: /tmp/percona-server-mongodb-{{mongodb_ver[0]}}.tar.gz
    dest: /tmp/percona-server-mongodb.tar.gz
    mode: '0644'
  when: not ( ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "22" )

- name: Copy tarball
  copy:
    src: /tmp/percona-server-mongodb-{{mongodb_ver[0]}}.glibc2.35.tar.gz
    dest: /tmp/percona-server-mongodb.tar.gz
    mode: '0644'
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "22" 

- name: Unpack new tarball
  unarchive: 
    src: /tmp/percona-server-mongodb.tar.gz
    dest: /                     
    remote_src: yes
    extra_opts:
    - --transform
    - 's,^/*[^/]*,/usr,S'

- name: Clone PSMDB repo
  git:
    repo: 'https://github.com/percona/percona-server-mongodb.git'
    dest: /percona-server-mongodb               
    version: "v{{ repo_branch[0] }}"

- name: Clone psmdb-testing repo
  git: 
    repo: 'https://github.com/Percona-QA/psmdb-testing.git'
    dest: /psmdb-testing
    version: "main"

- name: Create mongod symlink inside the workdir for 4.2 support
  file:
    src: /usr/bin/mongod
    dest: /percona-server-mongodb/mongod
    state: link

- name: Create mongo cli symlink inside the workdir for 4.2 support
  file:
    src: /usr/bin/mongo                       
    dest: /percona-server-mongodb/mongo
    state: link

- name: Install necessary packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - bzip2-devel
    - bzip2-libs
    - gcc
    - git
    - make
    - openssl-devel
    - openssl-static
    - readline-devel
    - readline-static
    - sqlite-devel
    - zlib-devel
    - python-setuptools
    - python3
    - python3-devel
    - python3-pip
    - bzip2-devel 
    - libffi-devel
    - xz-devel 
  when: ansible_os_family == "RedHat"

- name: Clone python repo
  git:
    repo: 'https://github.com/python/cpython.git'
    dest: /cpython
    version: "3.7"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Configure python
  shell: "./configure --enable-optimizations"
  args:
    chdir: /cpython
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Install python
  shell: "make install"
  args:
    chdir: /cpython 
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Ensure pip
  shell: "/usr/local/bin/easy_install-3.7 --upgrade pip"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Install Python utilities
  pip:
    name:
      - virtualenv
    state: present
    executable: pip3
  when: ansible_os_family == "RedHat"

- name: Install necessary deb packages for debian 11
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - net-tools
    - curl
    - gcc
    - git
    - libbz2-dev
    - libreadline-dev
    - libssl-dev
    - libsqlite3-dev
    - make
    - zlib1g-dev
    - python3
    - python3-pip
    - python3-dev
    - python3-markdown
    - python3-virtualenv
  when: ansible_distribution == "Debian"

- name: Upgrade pip
  pip:
    name:
      - pip
    state: latest
    executable: pip3

- name: Install Python utilities
  pip:
    requirements: /percona-server-mongodb/etc/pip/dev-requirements.txt
    executable: pip3

- name: Hotfix for cryptography module
  pip:
    name:
      - cryptography==36.0.2
    state: present
    executable: pip3

- name: Fix files permissions
  shell: "find /percona-server-mongodb/jstests -type f | xargs chmod 400"
