---
- set_fact:
    tarball: "{{ lookup('env', 'TARBALL') | default('https://downloads.percona.com/downloads/percona-server-mongodb-5.0/percona-server-mongodb-5.0.13-11/binary/tarball/percona-server-mongodb-5.0.13-11-x86_64.glibc2.17-minimal.tar.gz', true) }}"

- name: Get mongodb version
  set_fact:
    mongodb_ver: "{{ tarball | regex_search('mongodb-([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') }}"

- name: Get git repo branch
  set_fact:
    repo_branch: "{{ tarball | regex_search('mongodb-([0-9]+\\.[0-9]+)', '\\1') }}"

- name: Copy tarball
  copy:
    src: /tmp/percona-server-mongodb-{{mongodb_ver[0]}}.tar.gz
    dest: /tmp/percona-server-mongodb.tar.gz
    mode: '0644'
  when: not ( ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "22" )

- name: Copy tarball
  copy:
    src: /tmp/percona-server-mongodb-{{mongodb_ver[0]}}.glibc2.35.tar.gz
    dest: /tmp/percona-server-mongodb.tar.gz
    mode: '0644'
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "22" 

- name: Unpack new tarball
  unarchive: 
    src: /tmp/percona-server-mongodb.tar.gz
    dest: /                     
    remote_src: yes
    extra_opts:
    - --transform
    - 's,^/*[^/]*,/usr,S'

- name: Clone PSMDB repo
  git:
    repo: 'https://github.com/percona/percona-server-mongodb.git'
    dest: /percona-server-mongodb               
    version: "v{{ repo_branch[0] }}"
    single_branch: yes

- name: Clone psmdb-testing repo
  git: 
    repo: 'https://github.com/Percona-QA/psmdb-testing.git'
    dest: /psmdb-testing
    version: "main"

- name: Create mongod symlink inside the workdir for 4.2 support
  file:
    src: /usr/bin/mongod
    dest: /percona-server-mongodb/mongod
    state: link

- name: Check if mongo cli exists in PATH
  stat:
    path: /usr/bin/mongo
  register: mongo

- name: Create mongo cli symlink inside the workdir for 4.2 support
  file:
    src: /usr/bin/mongo
    dest: /percona-server-mongodb/mongo
    state: link
  when: mongo.stat.exists

- name: Install percona release package
  include_tasks: ../../../tasks/install_percona_release.yml

- name: Enable psmdb repo (change repo after the 6.0 release)
  command: percona-release enable psmdb-60 testing
  when: not mongo.stat.exists

- name: Install mongosh deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - percona-mongodb-mongosh
    - percona-server-mongodb-shell
  when: ansible_os_family == "Debian" and not mongo.stat.exists

- name: Install mongosh rpm packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - percona-mongodb-mongosh
    - percona-server-mongodb-shell
  when: ansible_os_family == "RedHat" and not mongo.stat.exists

- name: Copy mongo binary to workdir
  copy:
    src: /usr/bin/mongo
    dest: /percona-server-mongodb/mongo
    mode: '0755'
    remote_src: yes
  when: not mongo.stat.exists

- name: Link mongosh binary to mongo path for test scripts
  file:
    src: /usr/bin/mongosh
    dest: /usr/bin/mongo
    state: link
    force: yes    
  when: not mongo.stat.exists

- name: Upgrade pip
  pip:
    name:
      - pip
    state: latest
    executable: pip3

- name: Install 
  pip:
    name:
      - virtualenv
      - setuptools
    state: latest
    executable: pip3

- name: Install Python utilities
  pip:
    requirements: /percona-server-mongodb/etc/pip/dev-requirements.txt
    executable: pip3
    extra_args: --ignore-installed

- name: Hotfix for cryptography module
  pip:
    name:
      - cryptography==36.0.2
    state: present
    executable: pip3

- name: Fix files permissions
  shell: "find /percona-server-mongodb/jstests -type f | xargs chmod 400"

- name: Install necessary rpm packages for tarball
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - cyrus-sasl-lib
    - cyrus-sasl-plain
    - cyrus-sasl-gssapi
  when: ansible_os_family == "RedHat"

- name: Install necessary deb packages for tarball
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - libcurl4
    - libsasl2-modules
    - libsasl2-modules-gssapi-mit
    - libsasl2-modules-ldap
  when: ansible_os_family == "Debian"

- name: Erase .git folder
  shell: rm -rf /percona-server-mongodb/.git

- name: Add mongo version
  lineinfile:
    path: /percona-server-mongodb/.resmoke_mongo_version.yml
    line: "mongo_version: {{mongodb_ver[0]}}"
    create: yes
