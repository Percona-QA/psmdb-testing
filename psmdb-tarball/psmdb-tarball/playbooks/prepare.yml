---
- name: Prepare node for running tests
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
  - name: Install necessary rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bzip2-devel
      - bzip2-libs
      - gcc
      - git
      - make
      - openssl-devel
      - openssl-static
      - readline-devel
      - readline-static
      - sqlite-devel
      - zlib-devel
      - python-setuptools
      - python3
      - python3-devel
      - python3-pip
      - libffi-devel
      - xz-devel
      - unzip
      - epel-release
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install necessary rpm packages for RHEL8
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - iproute
      - bzip2-devel
      - bzip2-libs
      - gcc
      - git
      - make
      - openssl-devel
      - curl
      - python3-pip
      - python3-devel
      - python3-ldap
      - psmisc
      - libffi-devel
      - xz-devel
      - unzip
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Update apt cache
    shell: apt update --allow-releaseinfo-change
    when: ansible_os_family == "Debian"

  - name: Install necessary deb packages 
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - dirmngr
      - net-tools
      - curl
      - gcc
      - git
      - libbz2-dev
      - libreadline-dev
      - libssl-dev
      - libsqlite3-dev
      - make
      - zlib1g-dev
      - python3
      - python3-pip
      - python3-dev
      - python3-markdown
      - python3-virtualenv
      - unzip
    when: ansible_os_family == "Debian"

#  - name: Clone python repo
#    git:
#      repo: 'https://github.com/python/cpython.git'
#      dest: /cpython
#      version: "3.7"
#    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: Download python
    get_url:
      url: https://github.com/python/cpython/archive/refs/tags/v3.7.15.tar.gz
      dest: /cpython.tar.gz
    when: (ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8")

  - name: Extract python sources
    unarchive:
      src: /cpython.tar.gz
      dest: /
      remote_src: yes
    when: (ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8") 
   
  - name: Configure python
    shell: "./configure --enable-optimizations"
    args:
      chdir: /cpython-3.7.15
    when: (ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8") 

  - name: Install python
    shell: "make install"
    args:
      chdir: /cpython-3.7.15
    when: (ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8") 

  - name: Add deadsnakes repo for ubuntu 18.04
    apt_repository:
      repo: ppa:deadsnakes/ppa
    when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" )

  - name: Install necessary python packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - python3.7
      - python3.7-dev
      - python3.7-distutils
    when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18" )

  - name: Ensure python
    file:
      src: /usr/local/bin/python3.7
      dest: /bin/python3
      state: link
      force: yes
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8"

  - name: Ensure python Ubuntu 18.04
    shell: update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Ensure python3 Ubuntu 18.04
    file:
      src: /usr/bin/python3.7
      dest: /usr/bin/python3
      state: link
      force: yes
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Fix python3-apt for Ubuntu 18.04
    file:
      src: /usr/lib/python3/dist-packages/apt_inst.cpython-36m-x86_64-linux-gnu.so
      dest: /usr/lib/python3/dist-packages/apt_inst.so
      state: link
      force: yes
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Fix python3-apt for Ubuntu 18.04
    file:
      src: /usr/lib/python3/dist-packages/apt_pkg.cpython-36m-x86_64-linux-gnu.so
      dest: /usr/lib/python3/dist-packages/apt_pkg.so
      state: link
      force: yes
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Fix python-ldap for Ubuntu 18.04
    file:
      src: /usr/lib/python3/dist-packages/_ldap.cpython-36m-x86_64-linux-gnu.so
      dest: /usr/lib/python3/dist-packages/_ldap.so
      state: link
      force: yes
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Force upgrade pip for Ubuntu 18.04
    shell: python3 -m pip install --upgrade pip
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Force upgrade PyYAML for Ubuntu 18.04
    shell: python3 -m pip install --upgrade --ignore-installed PyYAML wrapt
    when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"

  - name: Ensure pip
    file:
      src: /usr/local/bin/pip3.7
      dest: /usr/local/bin/pip3
      state: link
      force: yes
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8"

  - name: Ensure pip
    file:
      src: /usr/local/bin/pip3.7
      dest: /bin/pip3
      state: link
      force: yes
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version <= "8"

