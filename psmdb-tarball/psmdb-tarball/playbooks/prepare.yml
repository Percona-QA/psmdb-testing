---
- name: Prepare node for running tests
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
  - name: Check if there are broken CentOS7 repos
    stat:
      path: /etc/yum.repos.d/CentOS-Base.repo
    register: repo_file

  - name: fix repos for CentOS7
    shell:
      cmd: |
       sed -i 's/mirror.centos.org/vault.centos.org/g' /etc/yum.repos.d/CentOS-Base.repo
       sed -i 's/^#.*baseurl=http/baseurl=http/g' /etc/yum.repos.d/CentOS-Base.repo
       sed -i 's/^mirrorlist=http/#mirrorlist=http/g' /etc/yum.repos.d/CentOS-Base.repo
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7" and repo_file.stat.exists

  - name: install GPG key for epel 7
    rpm_key:
      state: present
      key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: setup epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/archive/epel/7/x86_64/Packages/e/epel-release-7-14.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: Install necessary rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bzip2-devel
      - bzip2-libs
      - gcc
      - gcc-c++ 
      - git
      - make
      - openssl-devel
      - openssl11-devel
      - ncurses-devel
      - openssl-static
      - readline-devel
      - readline-static
      - sqlite-devel
      - zlib-devel
      - python-setuptools
      - python3
      - python3-devel
      - python3-pip
      - libffi-devel
      - xz-devel
      - unzip
      - epel-release
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install necessary rpm packages for RHEL8+
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - iproute
      - bzip2-devel
      - bzip2-libs
      - gcc
      - gcc-c++
      - git
      - make
      - openssl-devel
      - zlib-devel
      - curl
      - python3-pip
      - python3-devel
      - python3-ldap
      - psmisc
      - libffi-devel
      - xz-devel
      - unzip
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

  - name: install necessary rpm packages for RHEL9
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - openldap-compat
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

  - name: Update apt cache
    shell: apt update --allow-releaseinfo-change
    when: ansible_os_family == "Debian"

  - name: Install necessary deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
      - dirmngr
      - net-tools
      - curl
      - gcc
      - git
      - libbz2-dev
      - libreadline-dev
      - libssl-dev
      - libsqlite3-dev
      - make
      - zlib1g-dev
      - python3
      - python3-pip
      - python3-dev
      - unzip
    when: ansible_os_family == "Debian"

  - set_fact:
      python_version: "{{ lookup('env', 'PYTHON_VERSION') | default('3.10.14', true) }}"

  - name: Download python
    get_url:
      url: https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz
      dest: /opt/python.tar.gz

  - name: Extract python sources
    unarchive:
      src: /opt/python.tar.gz
      dest: /opt
      remote_src: yes

  - name: Fix for centos7
    shell: "sed -i 's/PKG_CONFIG openssl /PKG_CONFIG openssl11 /g' configure"
    args:
      chdir: /opt/Python-{{ python_version }}
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: Configure python
    shell: "./configure --prefix=/opt/python --enable-optimizations"
    args:
      chdir: /opt/Python-{{ python_version }}

  - name: Install python
    shell: "make -j2 install"
    args:
      chdir: /opt/Python-{{ python_version }}

  - name: Install virtualenv 
    pip:
      name:
        - virtualenv
      state: latest
      executable: /opt/python/bin/pip3

  - name: Upgrade pip and create venv
    pip:
      name:
        - pip
      state: latest
      virtualenv: /opt/venv
      virtualenv_command: /opt/python/bin/virtualenv
      virtualenv_python: /opt/python/bin/python3

