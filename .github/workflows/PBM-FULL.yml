name: PBM-FULL

on:
  workflow_dispatch:
    inputs:
      pbm_branch:
        description: "pbm branch"
        required: false
      go_ver:
        description: "golang version"
        required: false

  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - main
    paths:
      - 'pbm-functional/pytest/**'

jobs:
  test:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 180
    strategy:
      fail-fast: false
      matrix:
        psmdb: ["7.0", "8.0"]
        shard: [0, 1, 2, 3, 4, 5, 6]
    env:
      PBM_BRANCH: ${{ github.event.inputs.pbm_branch || 'dev' }}
      GO_VER: ${{ github.event.inputs.go_ver || 'bookworm' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment with PSMDB ${{ matrix.psmdb }} and PBM branch ${{ env.PBM_BRANCH }}
      run: |
        PSMDB=perconalab/percona-server-mongodb:${{ matrix.psmdb }} docker compose build easyrsa
        PSMDB=perconalab/percona-server-mongodb:${{ matrix.psmdb }} docker compose build
        docker compose up -d
      working-directory: ./pbm-functional/pytest
    - name: Run pytest shard ${{ matrix.shard }} on PSMDB ${{ matrix.psmdb }} and PBM branch ${{ env.PBM_BRANCH }}
      run: |
        docker compose run --rm test pytest -s --junitxml=junit.xml --shard-id=${{ matrix.shard }} --num-shards=7 -m 'not jenkins and not skip'
      working-directory: ./pbm-functional/pytest
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        report_paths: '**/junit.xml'
        include_passed: True
        detailed_summary: True
        include_time_in_summary: True
