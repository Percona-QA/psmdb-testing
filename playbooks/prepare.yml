---
- name: Prepare node for running tests
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tasks:
    - name: Create swap space
      command: dd if=/dev/zero of=/swapfile bs=1M count=4096
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: set permissions on swap file
      file:
        path: /swapfile
        mode: '0600'
        owner: root
        group: root
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: format the file for swap
      command: mkswap /swapfile
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: enable swap
      command: swapon /swapfile
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for epel 8
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for epel 7
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

    - name: install GPG key for Percona repos
      rpm_key:
        state: present
        key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup epel 8 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: setup epel 7 repo
      yum: name=https://dl.fedoraproject.org/pub/archive/epel/7/x86_64/Packages/e/epel-release-7-14.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

    - name: add the Vault and epel CentOS 6 repos
      shell: |
        curl https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo
        curl https://www.getpagespeed.com/files/centos6-epel-eol.repo --output /etc/yum.repos.d/epel.repo
        yum -y install centos-release-scl
        curl https://www.getpagespeed.com/files/centos6-scl-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl.repo
        curl https://www.getpagespeed.com/files/centos6-scl-rh-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo
        yum -y install epel-release.noarch
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

    - name: setup ca-certificates release
      yum:
        name: ca-certificates
        update_cache: yes
        state: present
      when: ansible_os_family == "RedHat"

    - name: allow release-info to change for apt repositories
      command: apt-get update -y --allow-releaseinfo-change
      when: ansible_os_family == "Debian" and ansible_distribution_release == "buster"

    - name: Remove bullseye-backports entries from apt sources
      replace:
        path: /etc/apt/sources.list
        regexp: '^(deb.*bullseye-backports)'
        replace: '# \1'
      when: ansible_distribution_release == 'bullseye'

    - name: install needed packages for running tests with apt
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
          - unzip
          - wget
          - gnupg
          - gnupg2
          - rsync
          - acl
          - git
      retries: 60
      delay: 10
      register: result
      until: result is not failed
      when: ansible_os_family == "Debian"

    - name: update systemd-sysv integration on debian/ubuntu
      apt:
        name: "{{ packages }}"
        update_cache: yes
        state: latest
      vars:
        packages:
        - systemd-sysv
      when: ansible_os_family == "Debian" and ansible_distribution_release != "trusty"

    - name: Check if there are broken CentOS7 repos
      stat:
        path: /etc/yum.repos.d/CentOS-Base.repo
      register: repo_file

    - name: fix repos for CentOS7
      shell:
       cmd: |
        sed -i 's/mirror.centos.org/vault.centos.org/g' /etc/yum.repos.d/CentOS-Base.repo
        sed -i 's/^#.*baseurl=http/baseurl=http/g' /etc/yum.repos.d/CentOS-Base.repo
        sed -i 's/^mirrorlist=http/#mirrorlist=http/g' /etc/yum.repos.d/CentOS-Base.repo
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7" and repo_file.stat.exists

    - name: install needed packages for running tests with yum
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - pv
          - libselinux-python
          - unzip
          - wget
          - rsync
          - git
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

    - name: install needed packages for running tests with yum on RHEL8
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - unzip
        - git
        - wget
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8

    - name: Install necessary tools for AL
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - tar
        - iproute
        - openssl
      when: ansible_distribution == "Amazon"

    - set_fact:
        ssh_pubkey: "{{ lookup('env', 'SSH_PUBKEY') | default('none', true) }}"

    - set_fact:
        ssh_user: "{{ lookup('env', 'SSH_USER') | default('none', true) }}"

    - name: Add user to Redhat
      user:
        name: "{{ ssh_user }}"
        shell: /bin/bash
        groups: wheel
        append: yes
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'RedHat'

    - name: Add user to Debian
      user:
        name: "{{ ssh_user }}"
        shell: /bin/bash
        groups: sudo
        append: yes
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Debian'

    - name: Add pub key
      authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ ssh_pubkey }}"
      when: ssh_user != "none" and ssh_pubkey != "none"

    - name: Allow sudo without password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'RedHat'

    - name: Allow sudo without password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Debian'
