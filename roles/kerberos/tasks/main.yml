---


- name: Install necessary tools for Debain
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - iproute2
  when: ansible_distribution == "Debian"

- name: Make sure we have the entry for hostname in /etc/hosts
  lineinfile:
    state: present
    dest: /etc/hosts
    regexp: '.*{{ ansible_hostname }}'
    line: '{{ ansible_default_ipv4.address }} {{ ansible_hostname }} {{ ansible_hostname }}.{{ realm_name|lower() }}'
    unsafe_writes: yes

- name: Check hosts file
  command: cat /etc/hosts
  register: command_output

- name: Debug /etc/hosts
  debug:
    msg: "{{command_output.stdout}}"

- name: Add OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install needed Kerberos packages
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ krb_pkg }}"

- name: Copy KDC configuration file
  template:
    src: kdc.conf.j2
    dest: "{{ kdc_conf_path }}"
  notify:
   - restart kerberos

- name: Copy KDC ACL configuration file
  template:
    src: kadm5.acl.j2
    dest: "{{ kadm5_acl_path }}"
  notify:
   - restart kerberos

- name: Copy client configuration file
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf

- name: Create initial Kerberos database
  shell: kdb5_util -P {{ master_db_pass }} create -s

- name: Start Kerberos services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ krb_service }}"

- name: Create an admin for administering Kerberos server
  shell: kadmin.local -q "addprinc -pw {{ kadmin_pass }} {{ kadmin_user }}/admin"

- name: Create mongodb principal
  shell: kadmin.local -q "addprinc -pw {{ mongod_pass }} {{ mongod_user }}/{{ ansible_hostname }}"

- name: Extract mongodb keys into keytab
  shell: kadmin.local -q "ktadd {{ mongod_user }}/{{ ansible_hostname }}@{{ realm_name|upper() }}"

- name: Get all users
  getent:
    database: passwd
    split: ':'

- debug:
    var: getent_passwd

- name: Copy /etc/krb5.keytab
  copy:
    src: /etc/krb5.keytab
    dest: /etc/mongodb.keytab
    remote_src: yes
    owner: mongod
  when: ( "mongod" in getent_passwd.keys() )

- name: Copy /etc/krb5.keytab
  copy:
    src: /etc/krb5.keytab
    dest: /etc/mongodb.keytab
    remote_src: yes
    owner: root
  when: not ( "mongod" in getent_passwd.keys() )

- name: Add KRB5_KTNAME for PSMDB deb
  lineinfile:
    path: /etc/default/mongod
    line: KRB5_KTNAME=/etc/mongodb.keytab
    create: yes
  when: ansible_os_family == "Debian"

- name: Add KRB5_KTNAME for PSMDB rpm
  lineinfile:
    path: /etc/sysconfig/mongod
    line: KRB5_KTNAME=/etc/mongodb.keytab
    create: yes
  when: ansible_os_family == "RedHat"
 
