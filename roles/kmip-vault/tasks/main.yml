- include_tasks: "generate_vault_certs.yml"
- include_tasks: "RedHat.yml"
- include_tasks: "Debian.yml"

- name: Ensure mongod system user exists
  ansible.builtin.user:
    name: mongod
    system: true
    shell: /usr/sbin/nologin
    create_home: false

- name: Remove pre-existing vault container
  docker_container:
    name: vault
    state: absent
    keep_volumes: false

- name: Run Vault Enterprise container
  community.docker.docker_container:
    name: vault
    image: "hashicorp/vault-enterprise:latest"
    command: "server"
    restart_policy: unless-stopped
    published_ports:
      - "8200:8200"
      - "5696:5696"
    env:
      VAULT_LOCAL_CONFIG: |
        {
          "storage": { "file": { "path": "/vault/file" } },
          "listener": [{
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_cert_file": "/etc/vault/vault.crt",
              "tls_key_file": "/etc/vault/vault.key"
            }
          }],
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h",
          "ui": true,
          "log_level": "debug",
          "log_format": "json"
        }
      VAULT_ADDR: https://127.0.0.1:8200
      VAULT_CACERT: /etc/vault/ca.crt
      VAULT_LICENSE: "{{ vault_license }}"
    volumes:
      - "/etc/vault:/etc/vault"
    capabilities:
      - "IPC_LOCK"

- name: Wait for Vault TCP port to open
  wait_for:
    host: 127.0.0.1
    port: 8200
    delay: 1
    timeout: 60

- name: Wait for 5 seconds
  ansible.builtin.wait_for:
    timeout: 5

- name: Initiate Vault
  community.docker.docker_container_exec:
    container: vault
    command: sh -lc "vault operator init -address=https://127.0.0.1:8200 -tls-skip-verify > /etc/vault/vault_keys.txt"

- name: Read unseal keys from vault_keys.txt
  community.docker.docker_container_exec:
    container: vault
    command: >-
      sh -lc "awk -F': ' '/^Unseal Key [1-3]:/ {print $2}' /etc/vault/vault_keys.txt"
  register: vault_sealed_keys_raw

- name: Create unseal key list
  ansible.builtin.set_fact:
    unseal_keys: "{{ (vault_sealed_keys_raw.stdout_lines | default([])) | map('trim') | list }}"

- name: Unseal Vault
  community.docker.docker_container_exec:
    container: vault
    command: "vault operator unseal -address=https://127.0.0.1:8200 -tls-skip-verify {{ item }}"
  loop: "{{ unseal_keys }}"

- name: Check Vault seal status
  community.docker.docker_container_exec:
    container: vault
    command: vault status -address=https://127.0.0.1:8200 -tls-skip-verify -format=json
  register: vault_status_after

- name: Fail if Vault still sealed
  ansible.builtin.fail:
    msg: "Vault is still sealed."
  when: (vault_status_after.stdout | from_json).sealed | default(true)

- name: Store Vault root token
  community.docker.docker_container_exec:
    container: vault
    command: >-
      sh -lc "awk -F': *' '/^Initial Root Token:/ {print $2}' /etc/vault/vault_keys.txt"
  register: vault_root_token_raw

- name: Set Vault root token variable
  set_fact:
    vault_root_token: "{{ (vault_root_token_raw.stdout | regex_replace('\r','') | trim) }}"

- name: Create Vault token file
  ansible.builtin.copy:
    dest: /etc/vault/vault.token
    content: "{{ vault_root_token }}"
    owner: mongod
    group: mongod
    mode: '0600'

- name: Login to Vault
  community.docker.docker_container_exec:
    container: vault
    command: "vault login -address=https://127.0.0.1:8200 -tls-skip-verify '{{ vault_root_token }}'"
  register: login

- name: Enable KMIP
  community.docker.docker_container_exec:
    container: vault
    command: "vault secrets enable -address=https://127.0.0.1:8200 -tls-skip-verify kmip"

- name: Enable KV v2
  community.docker.docker_container_exec:
    container: vault
    command: "vault secrets enable -address=https://127.0.0.1:8200 -tls-skip-verify -path=secret_v2 -version=2 kv"

- name: Create Scope
  community.docker.docker_container_exec:
    container: vault
    command: "vault write -f -address=https://127.0.0.1:8200 -tls-skip-verify kmip/scope/psmdb"

- name: Create role within scope
  community.docker.docker_container_exec:
    container: vault
    command: "vault write -address=https://127.0.0.1:8200 -tls-skip-verify kmip/scope/psmdb/role/mongod operation_all=true"

- name: Configure the KMIP listener address
  community.docker.docker_container_exec:
    container: vault
    command: "vault write -address=https://127.0.0.1:8200 -tls-skip-verify kmip/config listen_addrs=0.0.0.0:5696"

- name: Add vault to /etc/hosts
  lineinfile:
    state: present
    dest: /etc/hosts
    line: '127.0.0.1 vault'
    unsafe_writes: yes

- include_tasks: "generate_kmip_certs.yml"
