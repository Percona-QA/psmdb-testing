---
dependency:
  name: galaxy
driver:
  name: docker
platforms:
  - name: primary-rs0
    groups: 
      - mongo
      - primary
      - mc
    image: "${MOLECULE_DISTRO:-geerlingguy/docker-centos7-ansible:latest}"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    networks: 
      - name: test
  - name: secondary1-rs0
    groups:
      - mongo
      - secondary
    image: "${MOLECULE_DISTRO:-geerlingguy/docker-centos7-ansible:latest}"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    networks: 
       - name: test
  - name: secondary2-rs0
    groups:
      - mongo
      - secondary
    image: "${MOLECULE_DISTRO:-geerlingguy/docker-centos7-ansible:latest}"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    networks: 
      - name: test
  - name: minio
    groups:
      - minio
    image: "minio/minio"
    exposed_ports: 
      - 9000
    env: "MINIO_ACCESS_KEY=minio1234 MINIO_SECRET_KEY=minio1234"
    command: "server /backup"
    pre_build_image: true
    networks: 
      - name: test
provisioner:
  name: ansible
  log: true
  playbooks:
    converge: ../../playbooks/converge.yml
    cleanup: ../../playbooks/cleanup.yml
verifier:
  name: testinfra
  directory: ../../tests/
  options:
    verbose: true
    capture: sys
    o: junit_logging=system-out
#    s: true
    junitxml: report.xml
scenario:
  name: docker
  test_sequence:
    - create
    - converge
    - verify
    - cleanup
    - destroy
  destroy_sequence:
    - destroy
  cleanup_sequence:
    - cleanup
