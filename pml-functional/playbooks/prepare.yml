- name: Prepare
  hosts: all
  become: true
  become_method: sudo
  tasks:
    - name: Get list of block devices
      command: 'lsblk -lno NAME'
      register: results

    - name: Create variable block_devices
      set_fact:
        block_devices: "{{ results.stdout_lines }}"

    - debug:
        var: block_devices

    - set_fact:
        instance_type: "{{ lookup('env', 'INSTANCE_TYPE') }}"

    - name: Create File System
      filesystem:
        fstype: xfs
        dev: "/dev/nvme0n1"
      when: instance_type == "i3.large" or instance_type == "i3.xlarge"

    - name: Create File System
      filesystem:
        fstype: xfs
        dev: "/dev/nvme1n1"
      when: instance_type == "i3en.large" or instance_type == "i3en.xlarge" or instance_type == "i3en.3xlarge"

    - name: Create and mount disks
      mount:
        path: "/mnt/data"
        src: "/dev/nvme0n1"
        fstype: xfs
        opts: defaults,noatime,nodiscard
        state: mounted
      when: instance_type == "i3.large" or instance_type == "i3.xlarge"

    - name: Create and mount disks
      mount:
        path: "/mnt/data"
        src: "/dev/nvme1n1"
        fstype: xfs
        opts: defaults,noatime,nodiscard
        state: mounted
      when: instance_type == "i3en.large" or instance_type == "i3en.xlarge" or instance_type == "i3en.3xlarge"

    - set_fact:
        ssh_pubkey: "{{ lookup('env', 'SSH_PUBKEY') | default('none', true) }}"

    - set_fact:
        ssh_user: "{{ lookup('env', 'SSH_USER') | default('none', true) }}"

    - name: Add user
      user:
        name: "{{ ssh_user }}"
        shell: /bin/bash
        groups: wheel
        append: yes
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Redhat'

    - name: Add user
      user:
        name: "{{ ssh_user }}"
        shell: /bin/bash
        groups: ubuntu
        append: yes
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Debian'

    - name: Add pub key
      authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ ssh_pubkey }}"
      when: ssh_user != "none" and ssh_pubkey != "none"

    - name: Allow sudo without password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Redhat'

    - name: Allow sudo without password
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      when: ssh_user != "none" and ssh_pubkey != "none" and ansible_facts['os_family'] == 'Debian'
