# Used by PMM, change with caution
# This task installs all the necessary packages and configures PSMDB:
# 1) Package percona-release should be installed and required PSMDB repo should be enabled beforehand
# 2) PSMDB version should be passed as var using format: psmdb-60 for PSMDB 6.0+/psmdb-50 for PSMDB 5.0+/etc.
# Can be included to another playbook like described below:
# - name: some name for the task
#   include_tasks: ../tasks/install_setup_psmdb.yml
#   vars:
#    psmdb_to_test: "psmdb-60"

- set_fact:
    psmdb_mongosh: "{{ psmdb_to_test.split('-')[1] }}"

- name: install psmdb deb packages
  apt:
    name: "{{ packages }}"
    update_cache: yes
    state: latest
  vars:
    packages:
    - percona-server-mongodb
    - percona-server-mongodb-server
    - percona-server-mongodb-mongos
    - percona-server-mongodb-tools
  when: ansible_os_family == "Debian"

- name: install psmdb rpm packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - percona-server-mongodb
    - percona-server-mongodb-server
    - percona-server-mongodb-mongos
    - percona-server-mongodb-tools
  when: ansible_os_family == "RedHat"

- name: install mongo shell deb package
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - percona-server-mongodb-shell
  when: ansible_os_family == "Debian" and psmdb_mongosh < "60"

- name: install mongosh deb package
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - percona-mongodb-mongosh
  when: ansible_os_family == "Debian" and psmdb_mongosh >= "60"

- name: install mongo shell rpm package
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - percona-server-mongodb-shell
  when: ansible_os_family == "RedHat" and psmdb_mongosh < "60"

- name: install mongosh rpm package
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - percona-mongodb-mongosh
  when: ansible_os_family == "RedHat" and psmdb_mongosh >= "60"

- name: copy mongosh binary to mongo path for test scripts
  file:
    src: /usr/bin/mongosh
    dest: /usr/bin/mongo
    state: link
  when: psmdb_mongosh >= "60"

- name: stop mongod service
  service: name=mongod state=stopped

- name: add replica set name into mongod config
  replace:
    path: /etc/mongod.conf
    regexp: '^#replication:'
    replace: 'replication:\n  replSetName: "rs1"'

- name: start mongod service
  service: name=mongod state=started

- name: initiate mongod replica set
  command: mongo --eval 'rs.initiate()'
